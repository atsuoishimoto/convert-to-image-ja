<tracker version="1.0" xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://sourceforge.net/export/sf_tracker_export.xsd">
	<artifact id="1880469">
		<submitted_by>jukkaz</submitted_by>
		<submitted_date>2008-01-26 14:23</submitted_date>
		<artifact_type id="773648">773648</artifact_type>
		<category id="100">None</category>
		<artifact_group id="100"></artifact_group>
		<assigned_to>Nobody/Anonymous</assigned_to>
		<priority id="5">5</priority>
		<status>Open</status>
		<resolution>None</resolution>
		<summary>Updated Maven POM file</summary>
		<detail>Hi,

Attached is an updated Maven 2 POM file for FontBox.
This POM file is not designed to replace the Ant build,
just to make it easy for Maven users to quickly build
FontBox (mvn install) and set it up for IDE integration
(mvn eclipse:eclipse).

BR,

Jukka Zitting
</detail>
		<existingfiles>
			<file>
				<id>263868</id>
				<name>pom.xml</name>
				<description>Maven 2 POM file for FontBox</description>
				<filesize>3170</filesize>
				<filetype>text/xml</filetype>
				<adddate>1201386188</adddate>
				<submitted_by>660288</submitted_by>
			</file>
		</existingfiles>
		<change_log>
			<item>
				<field>File Added</field>
				<old_value>263868: pom.xml</old_value>
				<date>1201386190</date>
				<by>jukkaz</by>
			</item>
		</change_log>
	</artifact>
	<artifact id="1509929">
		<submitted_by>tomidev</submitted_by>
		<submitted_date>2006-06-21 05:49</submitted_date>
		<artifact_type id="773648">773648</artifact_type>
		<category id="100">None</category>
		<artifact_group id="100"></artifact_group>
		<assigned_to>Nobody/Anonymous</assigned_to>
		<priority id="9">9</priority>
		<status>Closed</status>
		<resolution>Fixed</resolution>
		<summary>java.lang.ArrayIndexOutOfBoundsException</summary>
		<detail>We have the same problem, as described in:
http://sourceforge.net/tracker/index.php?func=detail&amp;aid=1490186&amp;group_id=149227&amp;atid=773648.

This problem was caused by many PDF documents, we
changed the code, like described in the patch abouve
and everything worked fine.

java.lang.ArrayIndexOutOfBoundsException: 4
	at
org.fontbox.cmap.CMapParser.parseNextToken(CMapParser.java:294)
	at org.fontbox.cmap.CMapParser.parse(CMapParser.java:103)
	at
org.pdfbox.pdmodel.font.PDFont.parseCmap(PDFont.java:549)
	at org.pdfbox.pdmodel.font.PDFont.encode(PDFont.java:372)
	at
org.pdfbox.util.PDFStreamEngine.showString(PDFStreamEngine.java:346)
	at
org.pdfbox.util.operator.ShowText.process(ShowText.java:66)
	at
org.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:508)
	at
org.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:221)
	at
org.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:174)
	at
org.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:341)
	at
org.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:251)
	at
org.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:203)
	at pdf2text.Main.main(Main.java:51)

The test application, looks like below:

package pdf2text;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.util.Iterator;

import org.apache.commons.io.FileUtils;
import org.pdfbox.pdmodel.PDDocument;
import org.pdfbox.util.PDFTextStripper;

public class Main {

	private static File file;

	private static PDDocument pdfdoc;

	private static Writer output;

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		try {
			if (args.length &lt; 1) {
				System.err.println("Usage: Main &lt;dir-to-check&gt;");
			}

			// Verzeichni mit PDF Dokumenten
			System.out.println("Using directory " + args[0]);
			File dir = new File(args[0]);
			String[] fileExtensions = { "pdf" };
			boolean recursive = true;

			// Datei mit extrahiertem Text
			String extracted = "C:/Temp/pdf-extracted-text.txt";

			for (Iterator files = FileUtils.iterateFiles(dir,
fileExtensions,
					recursive); files.hasNext();) {
				file = (File) files.next();
				try {
					pdfdoc = PDDocument.load(file);

					FileOutputStream fos = new
FileOutputStream(extracted);
					output = new OutputStreamWriter(fos, "UTF-16");

					PDFTextStripper stripper = null;
					stripper = new PDFTextStripper();
					stripper.writeText(pdfdoc, output);
					pdfdoc.close();
					System.out.println("Successfully read " +
file.getName());

				} catch (IOException e) {
					e.printStackTrace();
				} catch (Exception e) {
					// Fehlerhafte Files werden auf die Console
geschrieben
					System.out.println("### EXCEPTION ###");
					System.out.println(file.getName());
					e.printStackTrace();
					System.out.println();
				}
			}
		} catch (Throwable thr) {
			thr.printStackTrace();
		}

	}
}


We are using PDFBox with FontBox within WebTest and we
are doing automated PDF document tests.

Since there is already a never version of PDFBox with
FontBox in WebTest, we would like to patch this problem
within FontBox and not within WebTest. We can't go back
to PDFBox 0.7.2 for different reasons.

I attached a test PDF document, which causes this error.

Any help is appreciated.

Thanks a lot and best regards,
Tomi</detail>
		<follow_ups>
			<item>
				<date>1162427725</date>
				<sender>benlitchfield</sender>
				<text>Logged In: YES 
user_id=601708

Fixed in CVS.</text>
			</item>
			<item>
				<date>1150894334</date>
				<sender>tomidev</sender>
				<text>Logged In: YES 
user_id=612341

I changed the priority, since without a patch we can't use
the current version of PDFBox
(pdfbox-0.7.3-dev-log4j-20060611) with FontBox.</text>
			</item>
		</follow_ups>
		<existingfiles>
			<file>
				<id>182432</id>
				<name>fontbox-test.pdf</name>
				<description>PDF document, which causes a java.lang.ArrayIndexOutOfBoundsException within FontBox</description>
				<filesize>124066</filesize>
				<filetype>application/pdf</filetype>
				<adddate>1150894184</adddate>
				<submitted_by>612341</submitted_by>
			</file>
		</existingfiles>
		<change_log>
			<item>
				<field>close_date</field>
				<old_value>0</old_value>
				<date>1162427725</date>
				<by>benlitchfield</by>
			</item>
			<item>
				<field>resolution_id</field>
				<old_value>100</old_value>
				<date>1162427725</date>
				<by>benlitchfield</by>
			</item>
			<item>
				<field>status_id</field>
				<old_value>1</old_value>
				<date>1162427725</date>
				<by>benlitchfield</by>
			</item>
			<item>
				<field>priority</field>
				<old_value>5</old_value>
				<date>1150894335</date>
				<by>tomidev</by>
			</item>
			<item>
				<field>File Added</field>
				<old_value>182432: fontbox-test.pdf</old_value>
				<date>1150894184</date>
				<by>tomidev</by>
			</item>
		</change_log>
	</artifact>
	<artifact id="1490186">
		<submitted_by>pedropuchalski</submitted_by>
		<submitted_date>2006-05-17 04:38</submitted_date>
		<artifact_type id="773648">773648</artifact_type>
		<category id="100">None</category>
		<artifact_group id="100"></artifact_group>
		<assigned_to>Nobody/Anonymous</assigned_to>
		<priority id="5">5</priority>
		<status>Closed</status>
		<resolution>Fixed</resolution>
		<summary>Patch witch fix NullPointerException in CMapPerser</summary>
		<detail>This bug was coused by declaring four elements array of 
bytes(new byte[4]), but there may by much more. I 
simply replaced byte array by ArrayList object and it 
works just fine for me:)

This array was used to extract UTF-16BE code for 
coresponding char code in the CMap. And sometlimes this 
is much more then 4 bytes. I. e. "1/4" is rendered and 
described as one char/glyph in pdf, but will be 6 bytes 
long in UTF-16BE: &lt;0031002f0032&gt;.
 </detail>
		<follow_ups>
			<item>
				<date>1162427533</date>
				<sender>benlitchfield</sender>
				<text>Logged In: YES 
user_id=601708

increased buffer size.</text>
			</item>
			<item>
				<date>1147866444</date>
				<sender>pedropuchalski</sender>
				<text>Logged In: YES 
user_id=1463773

Sorry...:/ When I was writing this post I was thinking about 
ArrayOutOfBoundsException NOT NullPointerException. I think 
if I was native speeker there won't be such mistake, but I'm 
not:/ </text>
			</item>
		</follow_ups>
		<existingfiles>
			<file>
				<id>178268</id>
				<name>CMapPerser-NullPointerExceptionFix.patch</name>
				<description>CMapPerser NullPointerException Fix, Patch</description>
				<filesize>2003</filesize>
				<filetype>application/octet-stream</filetype>
				<adddate>1147865937</adddate>
				<submitted_by>1463773</submitted_by>
			</file>
		</existingfiles>
		<change_log>
			<item>
				<field>close_date</field>
				<old_value>0</old_value>
				<date>1162427533</date>
				<by>benlitchfield</by>
			</item>
			<item>
				<field>resolution_id</field>
				<old_value>100</old_value>
				<date>1162427533</date>
				<by>benlitchfield</by>
			</item>
			<item>
				<field>status_id</field>
				<old_value>1</old_value>
				<date>1162427533</date>
				<by>benlitchfield</by>
			</item>
			<item>
				<field>File Added</field>
				<old_value>178268: CMapPerser-NullPointerExceptionFix.patch</old_value>
				<date>1147865938</date>
				<by>pedropuchalski</by>
			</item>
		</change_log>
	</artifact>
</tracker>

 	  	 
